{"version":3,"sources":["compenents/Header.js","compenents/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","search","setSearch","Search","e","a","preventDefault","axios","get","then","res","data","results","onSubmit","className","type","onChange","target","value","handleChange","name","placeholder","Movie","overview","original_language","original_title","backdrop_path","poster_path","popularity","title","release_date","vote_average","rating_color","src","alt","length","substring","moviesList","App","movies","setMovies","count","setCount","useEffect","previousMovies","nextMovies","basename","process","query","onClick","class","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c0e8df9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios';\nimport './Header.css'\n\nconst searchUrl = \"https://api.themoviedb.org/3/search/movie?api_key=c9fd3a3ff02ea8c83f2640c4e7ec0e2e&query=\";\n\nfunction Header(props) {\n\n    const [search, setSearch] = useState('');\n    const handleChange = (e) => {\n        setSearch(e.target.value)\n    }\n    const Search = async (e) => {\n        e.preventDefault();\n        await axios.get(searchUrl + search)\n            .then(res => {\n                props.data(res.data.results)\n        });\n        setSearch('');\n    }\n\n    return (\n        <>\n            <form onSubmit={(e) => Search(e)}>\n                <div className=\"header\">\n                    <p></p>\n                    <div className=\"search\">\n                        <i className=\"fa fa-search\"></i>\n                        <input type=\"text\" className=\"search-text\" onChange={(e) => handleChange(e)} value={search} name=\"search\" placeholder=\"Search...\" />\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './Movie.css'\n\nconst base_url = \"https://image.tmdb.org/t/p/w500\";\nconst defaultImage = \"https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=3440&q=80\";\n\nfunction Movie(props) {\n\n    const { original_language,\n        original_title,\n        backdrop_path,\n        overview,\n        popularity,\n        poster_path,\n        release_date,\n        title,\n        vote_average } = props.data;\n    let rating_color = vote_average <= 4 ? 'rating-red' : '' || vote_average < 7 ? 'rating-orange' : '' || vote_average >= 7 ? 'rating-green' : '';\n\n    return (\n        <div className=\"movie-container\">\n            <div className=\"movie-block\">\n\n                <img src={poster_path ? base_url + poster_path : defaultImage} alt={title}/>\n\n                <div className=\"movie-info\">\n                    <span className=\"movie-title\"> { title.length > 20 ? title.substring(0,20) + \"...\" : title } </span>\n                    <span className={\"movie-rating\" + \" \" + rating_color}> {vote_average} </span>\n                </div>\n                <div className=\"movie-overview\">\n                    {\n                        overview ?\n                        (\n                            <>\n                                <h5 className=\"text-center pt-2\">Overview</h5>\n                                <p> {overview} </p>\n                            </>\n                        ) : \n                        <b>No overview available</b>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Movie\n","import { useState, useEffect } from 'react';\nimport Header from './compenents/Header';\nimport Movie from './compenents/Movie';\nimport axios from 'axios';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './App.css';\n\nconst moviesList = `https://api.themoviedb.org/3/discover/movie?api_key=c9fd3a3ff02ea8c83f2640c4e7ec0e2e&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=`;\n\nfunction App() {\n\n  const [movies, setMovies] = useState([])\n  let [count, setCount] = useState(1)\n\n  useEffect( async () => {\n\n    await axios.get(moviesList + count)\n          .then(res => { setMovies(res.data.results) })\n  }, [])\n\n  const Search = (query) => {\n    setMovies(query)\n  }\n\n  const previousMovies = async () => {\n    count = count-1;\n\n    if (count <= 0) {\n      count = 1\n      setCount(count)\n      return\n    }else{\n      setCount(count)\n      await axios.get(moviesList + count)\n            .then(res => { setMovies(res.data.results) })\n    }\n  }\n  \n  const nextMovies = async () => {\n    count = count+1;\n\n    if (count > 500) {\n        count = 500;\n        setCount(count);\n        return\n    }else{\n        setCount(count)\n        await axios.get(moviesList + count)\n            .then(res => { setMovies(res.data.results) })\n    }\n  }\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header data = {Search} />\n        <div className=\"next_back pt-4\">\n          <span className=\"backword-button\">\n            <button className=\"button btn-prev\" onClick={ () =>  previousMovies()}>\n              <i class=\"fas fa-angle-double-left\"></i>\n              <span className=\"texto prev-text\">Prev</span>\n            </button>\n          </span>\n          <span className=\"forword-button\">\n            <button className=\"button btn-next\" onClick={ () =>  nextMovies()}>\n              <span className=\"texto next-text\">Next</span>\n              <i className=\"fas fa-angle-double-right\"></i>          \n            </button>\n          </span>\n        </div>\n        <div className=\"movies-container\">\n          {\n            movies.map(movie => (\n              <Movie key={movie.id} data={movie} />\n            ))\n          }\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}